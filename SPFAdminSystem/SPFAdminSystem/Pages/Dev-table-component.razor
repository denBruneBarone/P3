@page "/table-test"

@using SPFAdminSystem.Database;
@using SPFAdminSystem.Database.UserFiles;
@using SPFAdminSystem.Database.ProductFiles;
@using BlazorTable
@inject AuthenticationStateProvider authStateProvider;
@inject IJSRuntime js;
@inject IUserData _db;
@inject IProductData _prodDb;

<Table TableItem="UserAction" Items="actions" PageSize="15" >
    <Column TableItem="UserAction" Title="Date" Field="@(x => x.Date)" Sortable="true" Filterable="true" Width="20%" DefaultSortColumn="true" />
    <Column TableItem="UserAction" Title="User" Field="@(x => x.User.UserName)" Sortable="true" Filterable="true" Width="20%" />
    <Column TableItem="UserAction" Title="Product" Field="@(x => x.Product.InHouseTitle)" Sortable="true" Filterable="true" Width="20%" /> 
    <Column TableItem="UserAction" Title="Value" Field="@(x => x.Value)" Sortable="true" Filterable="true" Width="10%"/>
    <Column TableItem="UserAction" Title="Type" Field="@(x => x.ActionType)" Sortable="true" Filterable="true" Width="10%" Format="C" Align="Align.Right" />
    <Pager ShowPageNumber="true" ShowTotalCount="true" ShowPageSizes="true" />
</Table>

@code
{
    public string Id { get; private set; }
    public string Title { get; private set; }
    private List<UserAction> actions = new();
    bool sortDesc = false;
    string currentlySortedBy = "date";
    public async void AddUserAction(string userName, string prodId)
    {
        User currUser = await _db.GetUserByName(userName);
        Product prod = await _prodDb.GetProductById(prodId);
        UserAction action = new UserAction(currUser.UserId, currUser, DateTime.Now, "OrderQuantity", "7", prodId, prod);
        await _db.InsertAction(action);
        actions.Add(action);
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        actions = await _db.GetActions();
        foreach (UserAction action in actions)
        {
            action.Product = await _prodDb.GetProductById(action.ProductId);
            action.User = await _db.GetUserById(action.UserId);
        }
    }

}
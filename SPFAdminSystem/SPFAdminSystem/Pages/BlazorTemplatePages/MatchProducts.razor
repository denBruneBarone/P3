@using SPFAdminSystem.Database;
@using SPFAdminSystem.Database.ProductFiles
@using System.Reflection
@inject IProductData _db

@page "/match"
@*/mapping*@

<div id="topSpacer"></div>

@*Container div holder alle andre divs*@
@*I productList tjekkes om produktet fra list 1 er i list 2 og markere dem med rødt eller grønt*@
@*matchProduct vise informationerne for produktet fra SF og GSM*@
@*browseBtn er knappen der tillader at lede efter alle produkter*@

<div class="tempButton">
    <button @onclick="InsertProduct">Add products</button>
</div>
<div class="container">
    <div id="productList">
        @{
            string[] checkList = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 6", "Item 7", "Item 8", "Item 9", "Item 10", "Item 11", "Item 12", "Item 13", "Item 14", "Item 15", "Item 16" };
            int[] valuesSelect = { 1, 2, 3, 4, 5 };


            string[] items = { "ProductID", "InhouseTitle", "Barcode", "OrderQTY" };
            int[] values = { 1, 2, 3, 4, 5 };

            int counter = 0;

            foreach (var product in checkList)
            {
                if (!(items.Contains(product)))
                {
                    counter++;
                }
            }
        }

        <ul id="productListItems">
            <li id="listTitle">@counter Unknown Products</li>
            @foreach (var item in products)
            {
                if (products.Contains(item))
                {
                    <li style="background-color: #b2dab6;"><button @onclick=@(_=>GetValue(item.InHouseTitle)) style="background-color: #b2dab6;" id="listButtons">@item.InHouseTitle</button></li>
                }
                else
                {
                    <li style="background-color: #f3cac9;"><button @onclick=@(_=>GetValue(item.InHouseTitle)) style="background-color: #f3cac9;" id="listButtons">@item.InHouseTitle</button></li>
                    counter++;
                }
            }
        </ul>

    </div>


    @*----------------------------------------------------------------------------------------------------------------------*@

    <div id="matchProduct">
        @*Attempt to make a title for the "Match Product" but failed at width*@
        <div id="matchProductTitle">
        </div>

        @*----------------------------------------------------------------------------------------------------------------------*@

        <div id="leftItem">
            <div id="itemTitle">
                <h1 style="font-weight: 700">@matchTitle</h1> @*dynamisk item title*@
            </div>
            <div id="currentInfoTitle">
                <h3 style="text-align: center;">Current match information:</h3>
            </div>
            <div id="leftMatchItemsFlex">
                <div id="currentInfo">
                    <ul id="matchListLeft">
                        @code {
                                for (int i = 0; i < products.Count(); i++)
                                {
                                    foreach (PropertyInfo prop in products[i].GetType().GetProperties())
                                    {
                                        if(prop.GetValue(products[i].ProductId, null) == matchTitle){
                                            Console.WriteLine("WORKS!!");
                                        }
                                    }
                                }
                                    foreach (PropertyInfo prop in products[0].GetType().GetProperties())
                                    {
                                        <li id="itemLi">@prop.Name</li>
                                    }
                        }
                            </ul>
                        </div>
                        <div id="currentInfoValues">
                            <ul style="list-style: none;" id="matchListLeft">
                                        @{
                                            foreach (PropertyInfo prop in products[0].GetType().GetProperties())
                                            {
                                                if (prop.GetValue(products[0], null) != null)
                                                {
                                            <li id="itemLi">@prop.GetValue(products[0], null).ToString()</li>
                                                }
                                                else
                                                {
                                            <li id="itemLi"></li>
                                                }
                                            }
                                        }
                            </ul>
                        </div>
                    </div>
                </div>

                                @*----------------------------------------------------------------------------------------------------------------------*@

                <div id="rightItem">
                    <div id="itemTitle">
                    </div>
                    <div id="currentInfoTitle">
                        <h3 style="text-align: center;">Selected match information:</h3>
                    </div>
                    <div id="leftMatchItemsFlex">
                        <div id="currentInfo">
                            <ul id="matchListLeft">
                                                @{
                                                    int countItemsR = 0;
                                                    foreach (var item in checkList)
                                                    {
                                                        if (countItemsR == 10)
                                                        {
                                                            break;
                                                        }
                                        <li id="itemLi">@item</li>
                                                        countItemsR++;
                                                    }
                                                }
                            </ul>
                        </div>
                        <div id="currentInfoValues">
                            <ul style="list-style: none;" id="matchListLeft">
                                                @{
                                                    int countItemsValuesR = 0;
                                                    foreach (var value in valuesSelect)
                                                    {
                                                        if (countItemsValuesR == 10)
                                                        {
                                                            break;
                                                        }
                                        <li id="itemValueLi">@value</li>
                                                        countItemsValuesR++;
                                                    }
                                                }
                            </ul>
                        </div>
                    </div>
                </div>

            </div>

                                @*----------------------------------------------------------------------------------------------------------------------*@

            <div id="browseBtn">
                <button id="browseBtnBlue">Browse all products</button>
            </div>

                                @*----------------------------------------------------------------------------------------------------------------------*@

        </div>

                                @code {

                                string matchTitle = "";

                                private void GetValue(string item)
                                {
                                    matchTitle = item;
                                }

                                /*Get products from database and insert products into database*/
                                public string Id { get; private set; }
                                public string Title { get; private set; }
                                private List<Product> products = new();


                                protected override async Task OnInitializedAsync()
                                {
                                    products = await _db.GetProducts();
                                }


                                public async Task InsertProduct()
                                {

                                    Product p = new();
                                    Product a = new();
                                    Product b = new();
                                    Product i = new();
                                    p.ProductId = "1";
                                    p.InHouseTitle = "ragnarok";
                                    p.Barcode = 24311231;
                                    p.OrderQuantity = 4;

                                    a.ProductId = "2";
                                    a.InHouseTitle = "Destiny";
                                    a.Barcode = 24311531;
                                    a.OrderQuantity = 3;

                                    b.ProductId = "3";
                                    b.InHouseTitle = "CSGO";
                                    b.Barcode = 24331231;
                                    b.OrderQuantity = 5;

                                    i.ProductId = "4";
                                    i.InHouseTitle = "BOTW";
                                    i.Barcode = 24311233;
                                    i.OrderQuantity = 6;


                                    await _db.InsertProduct(p);
                                    await _db.InsertProduct(a);
                                    await _db.InsertProduct(b);
                                    await _db.InsertProduct(i);


                                    products.Add(p);
                                    products.Add(a);
                                    products.Add(b);
                                    products.Add(i);
                                    Console.WriteLine("Product(s) Added");
                                }
    }
                            @*
#b2dab6 - grøn
#e6bdbc - m.rød
#f3cac9 - l.rød
#0288d1 - blå
*@
@using SPFAdminSystem.Database.UserFiles
@using System.ComponentModel.DataAnnotations;
@using BCrypt.Net
@inject IUserService _userdb

<div class="@showModal" style="height: 100%; width: 100%; position: fixed; top: 0; left: 0; z-index: 5; display: flex; justify-content: center; align-items: center;">
    <div @onclick=closeModal.Invoke class="bg-black bg-opacity-50" style="position: fixed; left: 0; top: 0; width: 100%; height: 100%; z-index: 1;"></div>
    <div class="modal-dialog" role="document" style="z-index: 2; width: 100%;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Change Role</h5>
            </div>
            <EditForm Model="@model" OnValidSubmit="@ChangeValue">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3 pt-4 px-4">
                    <p>CURRENT VALUE: @user.Role</p>
                </div>
                <div class="mb-3 pb-4 px-4">
                    <label for="role">User Roles:</label>
                    <select name="role" id="role" @bind=model.newVal>
                        <option value="Employee">employee</option>
                        <option value="Admin">admin</option>
                    </select>
                </div>
                <div class="mb-3 d-grid gap-2 flex justify-content-center">
                    <input type="submit" name="Submit" value="Done" class="btn btn-primary" />
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter] public string showModal { get; set; }
    [Parameter] public Action closeModal { get; set; }
    [Parameter] public User user { get; set; }

    public class Model
    {
        public string? newVal { get; set; }
    }
    public Model model = new();

    public async void ChangeValue()
    {
        user.Role = model.newVal;
        await _userdb.UpdateUser(user);
        closeModal.Invoke();
    }
}